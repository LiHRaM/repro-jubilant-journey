terraform {
  required_providers {
    docker = {
      source  = "kreuzwerker/docker"
      version = "3.0.2"
    }
    postgresql = {
      source  = "cyrilgdn/postgresql"
      version = "1.19.0"
    }
    random = {
      source  = "hashicorp/random"
      version = "3.5.1"
    }
  }
}

resource "random_password" "password" {
  length           = 16
  special          = true
  override_special = "!#$%&*()-_=+[]{}<>:?"
}

provider "docker" {
  host = "unix:///var/run/docker.sock"
}

resource "docker_image" "postgres" {
  name = "postgres:15-alpine"
}

resource "docker_container" "postgres" {
  image   = docker_image.postgres.image_id
  name    = "postgres"
  restart = "always"
  env = toset([
    "POSTGRES_PASSWORD=${random_password.password.result}"
  ])
  ports {
    external = 5432
    internal = 5432
  }
}

resource "time_sleep" "wait_10_seconds" {
  depends_on = [docker_container.postgres]

  create_duration = "10s"
}

provider "postgresql" {
  host     = "127.0.0.1"
  port     = docker_container.postgres.ports[0].external
  database = "postgres"
  username = "postgres"
  password = random_password.password.result
  sslmode  = "disable"
}

resource "postgresql_role" "my_role" {
  depends_on = [time_sleep.wait_10_seconds]

  name     = "my_role"
  login    = true
  password = "mypass"
}
